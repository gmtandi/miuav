package com.p016a;

import android.content.Context;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.SparseArray;
import com.amap.api.location.AMapLocation;
import com.amap.api.services.district.DistrictSearchQuery;
import com.autonavi.aps.amapapi.model.AmapLoc;
import com.tencent.mm.sdk.platformtools.Util;
import com.tencent.open.SocialConstants;
import java.util.HashMap;
import java.util.Locale;
import org.codehaus.jackson.org.objectweb.asm.Opcodes;
import org.codehaus.jackson.util.MinimalPrettyPrinter;
import org.json.JSONObject;
import org.p122a.p123a.C2915a;

/* renamed from: com.a.ev */
public class ev {
    public static String f1142a;
    public static String f1143b;
    public static String f1144c;
    public static String f1145d;
    public static String f1146e;
    public static String f1147f;
    public static String f1148g;
    public static String f1149h;
    public static String f1150i;
    public static int f1151j;
    public static String f1152k;
    public static String f1153l;
    public static int f1154m;
    public static boolean f1155n;
    public static int f1156o;
    static String f1157p;
    static HashMap<String, String> f1158q;
    public static final SparseArray<String> f1159r;
    private static String f1160s;
    private static String[] f1161t;

    static {
        f1160s = "http://apilocate.amap.com/mobile/binary";
        f1142a = C2915a.f14760f;
        f1161t = new String[]{"com.amap.api.location", "com.autonavi.aps.amapapi"};
        f1143b = null;
        f1144c = null;
        f1145d = null;
        f1146e = C2915a.f14760f;
        f1147f = C2915a.f14760f;
        f1148g = C2915a.f14760f;
        f1149h = C2915a.f14760f;
        f1150i = C2915a.f14760f;
        f1151j = 30000;
        f1152k = null;
        f1153l = null;
        f1154m = 20;
        f1155n = true;
        f1156o = 1;
        f1159r = new SparseArray();
        f1159r.append(0, "UNKWN");
        f1159r.append(1, "GPRS");
        f1159r.append(2, "EDGE");
        f1159r.append(3, "UMTS");
        f1159r.append(4, "CDMA");
        f1159r.append(5, "EVDO_0");
        f1159r.append(6, "EVDO_A");
        f1159r.append(7, "1xRTT");
        f1159r.append(8, "HSDPA");
        f1159r.append(9, "HSUPA");
        f1159r.append(10, "HSPA");
        f1159r.append(11, "IDEN");
        f1159r.append(12, "EVDO_B");
        f1159r.append(13, "LTE");
        f1159r.append(14, "EHRPD");
        f1159r.append(15, "HSPAP");
    }

    public static gd m1772a(String str) {
        gd gdVar = null;
        try {
            gdVar = new ge("loc", str, "AMAP_Location_SDK_Android 2.4.1").m1954a(ev.m1781b()).m1951a();
        } catch (Throwable th) {
            ev.m1777a(th, "CoreUtil", "getSDKInfo");
        }
        return gdVar;
    }

    public static AMapLocation m1773a(AmapLoc amapLoc) {
        if (amapLoc == null) {
            return null;
        }
        int a = amapLoc.m5310a();
        AMapLocation aMapLocation = new AMapLocation(C2915a.f14760f);
        aMapLocation.setLatitude(amapLoc.m5339i());
        aMapLocation.setLongitude(amapLoc.m5337h());
        aMapLocation.setAccuracy(amapLoc.m5341j());
        if (a == 0) {
            aMapLocation.setTime(amapLoc.m5343k());
        } else {
            aMapLocation.setTime(System.currentTimeMillis());
        }
        aMapLocation.setCountry(amapLoc.m5357r());
        aMapLocation.setRoad(amapLoc.m5365v());
        aMapLocation.setErrorCode(a);
        aMapLocation.setErrorInfo(amapLoc.m5324c());
        aMapLocation.setLocationDetail(amapLoc.m5329d());
        aMapLocation.setLocationType(amapLoc.m5318b());
        aMapLocation.setPoiName(amapLoc.m5371y());
        aMapLocation.setStreet(amapLoc.m5367w());
        aMapLocation.setNumber(amapLoc.m5369x());
        aMapLocation.setOffset(amapLoc.m5332e());
        Bundle bundle = new Bundle();
        bundle.putString("citycode", amapLoc.m5351o());
        bundle.putString(SocialConstants.PARAM_APP_DESC, amapLoc.m5353p());
        bundle.putString("adcode", amapLoc.m5355q());
        aMapLocation.setExtras(bundle);
        String o = amapLoc.m5351o();
        String p = amapLoc.m5353p();
        String q = amapLoc.m5355q();
        aMapLocation.setCityCode(o);
        aMapLocation.setAdCode(q);
        if (q == null || q.trim().length() <= 0) {
            aMapLocation.setAddress(p);
        } else {
            aMapLocation.setAddress(p.replace(MinimalPrettyPrinter.DEFAULT_ROOT_VALUE_SEPARATOR, C2915a.f14760f));
        }
        aMapLocation.setCity(amapLoc.m5361t());
        aMapLocation.setDistrict(amapLoc.m5363u());
        aMapLocation.setProvince(amapLoc.m5359s());
        aMapLocation.setAoiName(amapLoc.m5373z());
        return aMapLocation;
    }

    public static AMapLocation m1774a(JSONObject jSONObject) {
        if (jSONObject == null) {
            return null;
        }
        AMapLocation aMapLocation = new AMapLocation(C2915a.f14760f);
        String str = C2915a.f14760f;
        String str2 = C2915a.f14760f;
        String str3 = C2915a.f14760f;
        try {
            if (dn.m1514a(jSONObject, "accuracy")) {
                aMapLocation.setAccuracy(Float.parseFloat(jSONObject.getString("accuracy")));
            }
            if (dn.m1514a(jSONObject, "adCode")) {
                str = jSONObject.getString("adCode");
                aMapLocation.setAdCode(str);
            }
            if (dn.m1514a(jSONObject, "address")) {
                aMapLocation.setAddress(jSONObject.getString("address"));
            }
            if (dn.m1514a(jSONObject, "altitude")) {
                aMapLocation.setAltitude(jSONObject.getDouble("altitude"));
            }
            if (dn.m1514a(jSONObject, "bearing")) {
                aMapLocation.setBearing(Float.parseFloat(jSONObject.getString("bearing")));
            }
            if (dn.m1514a(jSONObject, "speed")) {
                aMapLocation.setSpeed(Float.parseFloat(jSONObject.getString("speed")));
            }
            if (dn.m1514a(jSONObject, DistrictSearchQuery.KEYWORDS_CITY)) {
                aMapLocation.setCity(jSONObject.getString(DistrictSearchQuery.KEYWORDS_CITY));
            }
            if (dn.m1514a(jSONObject, "cityCode")) {
                str2 = jSONObject.getString("cityCode");
                aMapLocation.setCityCode(str2);
            }
            if (dn.m1514a(jSONObject, DistrictSearchQuery.KEYWORDS_COUNTRY)) {
                aMapLocation.setCountry(jSONObject.getString(DistrictSearchQuery.KEYWORDS_COUNTRY));
            }
            if (dn.m1514a(jSONObject, DistrictSearchQuery.KEYWORDS_DISTRICT)) {
                aMapLocation.setDistrict(jSONObject.getString(DistrictSearchQuery.KEYWORDS_DISTRICT));
            }
            if (dn.m1514a(jSONObject, "errorCode")) {
                aMapLocation.setErrorCode(jSONObject.getInt("errorCode"));
            }
            if (dn.m1514a(jSONObject, "errorInfo")) {
                aMapLocation.setErrorInfo(jSONObject.getString("errorInfo"));
            }
            if (dn.m1514a(jSONObject, "latitude")) {
                aMapLocation.setLatitude(jSONObject.getDouble("latitude"));
            }
            if (dn.m1514a(jSONObject, "locationDetail")) {
                aMapLocation.setLocationDetail(jSONObject.getString("locationDetail"));
            }
            if (dn.m1514a(jSONObject, "locationType")) {
                aMapLocation.setLocationType(jSONObject.getInt("locationType"));
            }
            if (dn.m1514a(jSONObject, "longitude")) {
                aMapLocation.setLongitude(jSONObject.getDouble("longitude"));
            }
            if (dn.m1514a(jSONObject, "provider")) {
                aMapLocation.setProvider(jSONObject.getString("provider"));
            }
            if (dn.m1514a(jSONObject, DistrictSearchQuery.KEYWORDS_PROVINCE)) {
                aMapLocation.setProvince(jSONObject.getString(DistrictSearchQuery.KEYWORDS_PROVINCE));
            }
            if (dn.m1514a(jSONObject, "road")) {
                aMapLocation.setRoad(jSONObject.getString("road"));
            }
            if (dn.m1514a(jSONObject, "time")) {
                aMapLocation.setTime(jSONObject.getLong("time"));
            }
            if (dn.m1514a(jSONObject, "poiName")) {
                aMapLocation.setPoiName(jSONObject.getString("poiName"));
            }
            if (dn.m1514a(jSONObject, "street")) {
                aMapLocation.setStreet(jSONObject.getString("street"));
            }
            if (dn.m1514a(jSONObject, "number")) {
                aMapLocation.setNumber(jSONObject.getString("number"));
            }
            if (dn.m1514a(jSONObject, "satellites")) {
                aMapLocation.setSatellites(jSONObject.getInt("satellites"));
            }
            if (dn.m1514a(jSONObject, "aoiName")) {
                aMapLocation.setAoiName(jSONObject.getString("aoiName"));
            }
            if (dn.m1514a(jSONObject, SocialConstants.PARAM_APP_DESC)) {
                str3 = jSONObject.getString(SocialConstants.PARAM_APP_DESC);
            }
            Bundle bundle = new Bundle();
            bundle.putString("citycode", str2);
            bundle.putString(SocialConstants.PARAM_APP_DESC, str3);
            bundle.putString("adcode", str);
            aMapLocation.setExtras(bundle);
            return aMapLocation;
        } catch (Throwable th) {
            ev.m1777a(th, "CoreUtil", "transformLocation");
            return null;
        }
    }

    public static String m1775a() {
        return f1160s;
    }

    public static void m1776a(Context context) {
        try {
            if (dn.m1513a(ev.m1779b(context))) {
                f1160s = "http://abroad.apilocate.amap.com/mobile/binary";
                return;
            }
            ev.m1782c();
            f1157p = cs.m1374a(fn.m1842f(context));
            ev.m1783c(f1157p);
        } catch (Throwable th) {
            ev.m1777a(th, "CoreUtil", "checkUrl");
        }
    }

    public static void m1777a(Throwable th, String str, String str2) {
        if (!"reportError".equals(str2)) {
            try {
                th.printStackTrace();
                C0248h.m1980b(th, str, str2);
            } catch (Throwable th2) {
                th2.printStackTrace();
            }
        }
    }

    public static boolean m1778a(double d, double d2) {
        int i = (int) ((d2 - 73.0d) / 0.5d);
        int i2 = (int) ((d - 3.5d) / 0.5d);
        if (i2 < 0 || i2 >= Opcodes.LSUB || i < 0 || i >= Opcodes.IUSHR) {
            return false;
        }
        try {
            returncharAt(i + (i2 * Opcodes.IUSHR)) == '1';
        } catch (Throwable th) {
            ev.m1777a(th, "CoreUtil", "isChina");
            return true;
        }
    }

    public static String m1779b(Context context) {
        String str = C2915a.f14760f;
        try {
            TelephonyManager telephonyManager = (TelephonyManager) context.getSystemService("phone");
            if (telephonyManager != null) {
                String networkOperator = telephonyManager.getNetworkOperator();
                if (networkOperator != null && networkOperator.length() >= 3) {
                    return networkOperator.substring(0, 3);
                }
            }
        } catch (Throwable th) {
            ev.m1777a(th, "CoreUtil", "getMcc");
        }
        return str;
    }

    public static void m1780b(String str) {
        try {
            C0248h.m1979b(ev.m1772a("2.4.1"), str);
        } catch (Throwable th) {
            th.printStackTrace();
        }
    }

    public static String[] m1781b() {
        return (String[]) f1161t.clone();
    }

    private static void m1782c() {
        try {
            if (f1158q == null) {
                f1158q = new HashMap();
            }
            f1158q.clear();
            f1158q.put("a9a9d23668a1a7ea93de9b21d67e436a", "F13160D440C7D0229DA95450F66AF92154AC84DF088F8CA3100B2E8131D57F3DC67124D4C466056E7A3DFBE035E1B9A4B9DA4DB68AE65A43EDFD92F5C60EF0C9");
            f1158q.put("fe643c382e5c3b3962141f1a2e815a78", "FB923EE67A8B4032DAA517DD8CD7A26FF7C25B0C3663F92A0B61251C4FFFA858DF169D61321C3E7919CB67DF8EFEC827");
            f1158q.put("b2e8bd171989cb2c3c13bd89b4c1067a", "239CE372F804D4BE4EAFFD183668379BDF274440E6F246AB16BBE6F5D1D30DEACFBBF0C942485727FF12288228760A9E");
            f1158q.put("9a571aa113ad987d626c0457828962e6", "D2FF99A88BEB04683D89470D4FA72B1749DA456AB0D0F1A476477CE5A6874F53A9106423D905F9D808C0FCE8E7F1E04AC642F01FE41D0C7D933971F45CBA72B7");
            f1158q.put("668319f11506def6208d6afe320dfd52", "53E53D46011A6BBAEA4FAE5442E659E0577CDD336F930C28635C322FB3F51C3C63F7FBAC9EAE448DFA2E5E5D716C4807");
            f1158q.put("256b0f26bb2a9506be6cfdb84028ae08", "AF2228680EDC323FBA035362EB7E1E38A0C33E1CF6F6FB805EE553A230CBA754CD9552EB9B546542CBE619E8293151BE");
        } catch (Throwable th) {
            ev.m1777a(th, "CoreUtil", "initUrlHash");
        }
    }

    private static void m1783c(String str) {
        if (str != null) {
            try {
                if (str.length() != 0 && f1158q != null && f1158q.containsKey(str)) {
                    String str2 = (String) f1158q.get(str);
                    str2 = (str2 == null || str2.length() <= 0) ? null : new String(cs.m1384d(ev.m1784d(str2), str), "utf-8");
                    if (str2 != null && str2.length() > 0 && str2.contains("http:")) {
                        f1160s = str2;
                    }
                }
            } catch (Throwable th) {
                ev.m1777a(th, "CoreUtil", "checkUrl");
            }
        }
    }

    private static byte[] m1784d(String str) {
        int i = 0;
        if (str == null || str.length() < 2) {
            return new byte[0];
        }
        String toLowerCase = str.toLowerCase(Locale.US);
        int length = toLowerCase.length() / 2;
        byte[] bArr = new byte[length];
        while (i < length) {
            bArr[i] = (byte) (Integer.parseInt(toLowerCase.substring(i * 2, (i * 2) + 2), 16) & Util.MASK_8BIT);
            i++;
        }
        return bArr;
    }
}
